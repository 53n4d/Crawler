{"version":3,"sources":["components/HomePage.js","components/ChooseTesting.js","components/AuthStep.js","components/ScanTypeStep.js","components/FileOrEntryStep.js","components/TestsStep.js","components/StartScan.js","components/WebAppTesting.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","navigate","useNavigate","React","createElement","className","onClick","handleNavigation","ChooseTestingPage","path","AuthStep","_ref","onAuthSelect","loginUrl","setLoginUrl","useState","username","setUsername","password","setPassword","onSubmit","e","preventDefault","loginurl","type","value","onChange","target","ScanTypeStep","onScanTypeSelect","FileOrEntryStep","onFilePathSelect","onEntryPointSelect","files","name","TestsStep","scanType","onTestsSelect","handleDefaultTests","document","getElementById","classList","toggle","id","multiple","selectedTests","Array","from","selectedOptions","option","parseInt","Fragment","StartScan","onStartScan","results","JSON","stringify","WebAppTesting","auth","setAuth","authDetails","setAuthDetails","setScanType","filePath","setFilePath","entryPoint","setEntryPoint","tests","setTests","setResults","handleAuth","useAuth","details","entry","length","async","config","scantype","filepath","entrypoint","response","fetch","method","headers","Content-Type","body","result","json","error","console","App","Router","Routes","Route","element","ChooseTesting","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.b8bc70ab.chunk.js","sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./HomePage.css\";\n\nfunction HomePage() {\n  const navigate = useNavigate();\n\n  const handleNavigation = () => {\n    navigate(\"/choose-testing\");\n  };\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"content\">\n        <h1>Web App Testing</h1>\n        <h1>Mobile App Testing</h1>\n        <h1>API Testing</h1>\n        <p>Complete Dynamic Security Testing</p>\n        <button onClick={handleNavigation}>Get Started</button>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./ChooseTesting.css\";\n\nfunction ChooseTestingPage() {\n  const navigate = useNavigate();\n\n  const handleNavigation = (path) => {\n    navigate(path);\n  };\n\n  return (\n    <div className=\"choose-testing-page\">\n      <h1>Select Testing Type</h1>\n      <button onClick={() => handleNavigation(\"/web-app-testing\")}>Web App Testing</button>\n      <button onClick={() => handleNavigation(\"/mobile-app-testing\")}>Mobile App Testing</button>\n      <button onClick={() => handleNavigation(\"/api-testing\")}>API Testing</button>\n    </div>\n  );\n}\n\nexport default ChooseTestingPage;\n","import React, { useState } from \"react\";\n\nfunction AuthStep({ onAuthSelect }) {\n  const [loginUrl, setLoginUrl] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onAuthSelect(true, { loginurl: loginUrl, username, password });\n  };\n\n  return (\n    <div>\n      <label>Do you want to use authentication?</label><br />\n      <button onClick={() => onAuthSelect(false)}>No</button>\n      <button onClick={() => onAuthSelect(true)}>Yes</button>\n      {onAuthSelect && (\n        <form onSubmit={handleSubmit}>\n          <label>Enter URL: <input type=\"text\" value={loginUrl} onChange={(e) => setLoginUrl(e.target.value)} /></label><br />\n          <label>Enter Username: <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} /></label><br />\n          <label>Enter Password: <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} /></label><br />\n          <button type=\"submit\">Next</button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default AuthStep;\n","import React from \"react\";\n\nfunction ScanTypeStep({ onScanTypeSelect }) {\n  return (\n    <div>\n      <label>Select Scan Type:</label><br />\n      <select onChange={(e) => onScanTypeSelect(e.target.value)}>\n        <option value=\"\">Select</option>\n        <option value=\"inspection\">Inspection</option>\n        <option value=\"exploitation\">Exploitation</option>\n      </select>\n    </div>\n  );\n}\n\nexport default ScanTypeStep;\n","import React from \"react\";\n\nfunction FileOrEntryStep({ onFilePathSelect, onEntryPointSelect }) {\n  return (\n    <div>\n      <label>Select Option:</label><br />\n      <button onClick={() => onFilePathSelect(\"\")}>Upload File</button>\n      <button onClick={() => onEntryPointSelect(\"\")}>Enter Entry Point</button>\n      <button onClick={() => { onFilePathSelect(null); onEntryPointSelect(null); }}>None</button>\n\n      {onFilePathSelect !== null && (\n        <div>\n          <label>Upload File: <input type=\"file\" onChange={(e) => onFilePathSelect(e.target.files[0].name)} /></label><br />\n        </div>\n      )}\n\n      {onEntryPointSelect !== null && (\n        <div>\n          <label>Enter Entry Point: <input type=\"text\" onChange={(e) => onEntryPointSelect(e.target.value)} /></label><br />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FileOrEntryStep;\n","import React from \"react\";\n\nfunction TestsStep({ scanType, onTestsSelect }) {\n  const handleDefaultTests = () => {\n    if (scanType === \"inspection\") {\n      onTestsSelect([1, 2, 3, 4]);\n    } else if (scanType === \"exploitation\") {\n      onTestsSelect([5, 6, 7, 8, 9]);\n    }\n  };\n\n  const handleIndividualTests = (e) => {\n    const selectedTests = Array.from(e.target.selectedOptions, option => parseInt(option.value));\n    onTestsSelect(selectedTests);\n  };\n\n  return (\n    <div>\n      <label>Select Tests:</label><br />\n      <button onClick={handleDefaultTests}>Default Tests</button>\n      <button onClick={() => document.getElementById(\"tests-select\").classList.toggle(\"hidden\")}>Select Tests</button>\n\n      <select id=\"tests-select\" multiple className=\"hidden\" onChange={handleIndividualTests}>\n        {scanType === \"inspection\" && (\n          <>\n            <option value=\"1\">Fuzzing (1)</option>\n            <option value=\"2\">Subdomain Enumeration (2)</option>\n            <option value=\"3\">Directory Listing (3)</option>\n            <option value=\"4\">GraphQL Introspection (4)</option>\n          </>\n        )}\n        {scanType === \"exploitation\" && (\n          <>\n            <option value=\"5\">Brute Force Attack (5)</option>\n            <option value=\"6\">LFI (6)</option>\n            <option value=\"7\">File Upload (7)</option>\n            <option value=\"8\">GraphQL Introspection (8)</option>\n            <option value=\"9\">XSS Tests (Stored, Reflected, DOM) (9)</option>\n          </>\n        )}\n      </select>\n    </div>\n  );\n}\n\nexport default TestsStep;\n","import React from \"react\";\n\nfunction StartScan({ onStartScan, results }) {\n  return (\n    <div>\n      <button onClick={onStartScan}>Start Scan</button>\n      {results && (\n        <div id=\"results\">\n          <h2>Scan Results</h2>\n          <pre>{JSON.stringify(results, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default StartScan;\n","import React, { useState } from \"react\";\nimport AuthStep from \"./AuthStep\";\nimport ScanTypeStep from \"./ScanTypeStep\";\nimport FileOrEntryStep from \"./FileOrEntryStep\";\nimport TestsStep from \"./TestsStep\";\nimport StartScan from \"./StartScan\";\n\nfunction WebAppTesting() {\n  const [auth, setAuth] = useState(null);\n  const [authDetails, setAuthDetails] = useState({\n    loginurl: \"\",\n    username: \"\",\n    password: \"\",\n  });\n  const [scanType, setScanType] = useState(\"\");\n  const [filePath, setFilePath] = useState(\"\");\n  const [entryPoint, setEntryPoint] = useState(\"\");\n  const [tests, setTests] = useState([]);\n  const [results, setResults] = useState(null);\n\n  const handleAuth = (useAuth, details) => {\n    setAuth(useAuth);\n    if (useAuth) {\n      setAuthDetails(details);\n    }\n  };\n\n  const handleScanTypeChange = (type) => {\n    setScanType(type);\n  };\n\n  const handleFilePathChange = (path) => {\n    setFilePath(path);\n  };\n\n  const handleEntryPointChange = (entry) => {\n    setEntryPoint(entry);\n  };\n\n  const handleTestsChange = (selectedTests) => {\n    setTests(selectedTests);\n  };\n\n  const handleStartScan = async () => {\n    const config = {\n      auth: auth ? 1 : 2,\n      scantype: scanType,\n      loginurl: auth ? authDetails.loginurl : null,\n      username: auth ? authDetails.username : null,\n      password: auth ? authDetails.password : null,\n      filepath: filePath,\n      entrypoint: entryPoint,\n      tests: tests,\n    };\n\n    try {\n      const response = await fetch(\"/api/v1/config\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(config),\n      });\n      const result = await response.json();\n      setResults(result);\n    } catch (error) {\n      console.error(\"Error starting scan:\", error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Web App Testing Configuration</h1>\n      {auth === null && <AuthStep onAuthSelect={handleAuth} />}\n      {auth !== null && !scanType && (\n        <ScanTypeStep onScanTypeSelect={handleScanTypeChange} />\n      )}\n      {scanType && !filePath && !entryPoint && (\n        <FileOrEntryStep\n          onFilePathSelect={handleFilePathChange}\n          onEntryPointSelect={handleEntryPointChange}\n        />\n      )}\n      {(filePath || entryPoint) && !tests.length && (\n        <TestsStep scanType={scanType} onTestsSelect={handleTestsChange} />\n      )}\n      {tests.length > 0 && (\n        <StartScan onStartScan={handleStartScan} results={results} />\n      )}\n    </div>\n  );\n}\n\nexport default WebAppTesting;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport HomePage from \"./components/HomePage\";\nimport ChooseTesting from \"./components/ChooseTesting\";\nimport WebAppTesting from \"./components/WebAppTesting\";\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/choose-testing\" element={<ChooseTesting />} />\n        <Route path=\"/web-app-testing\" element={<WebAppTesting />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}